*::after,
*::before{
    box-sizing: border-box;
    margin: 0 auto;
    border: 0;
    
    
}

html{
    margin: 0 auto;
    border: 0;
    
}
.container{
    background-color: #333;
    height: 30vh;
    width: 1000px;

    display: flex;
    
    flex-direction: row;
    /*row, row-reverse, column-reverse, column  */
    
    
    flex-wrap: nowrap;
    /* nowrap/ wrap / wrap-reverse */
   
   
    flex-flow: row nowrap;
    /* Es un shorthand de flex-direction y flex wrap */
   
    justify-content:flex-start; 
    /* Define la alineacion de los hijos en el eje principal (main-axis) */
    /* flex-start|center|flex-end|space-between|space-around|space-evenly */

    /* Align-items es valor por defecto es strecht */
    align-items:stretch;
    /* strectch|flex-start|flex-end|center|baseline */


    /* Define la alineacion de los hijos en el eje trannsversal (cross axis), NO funciona cuando los hijos estan en una sola linea
    Y el valor de flex-flow tiene que ser flex-wrap
    flex-start|flex-end|center|space-between|space-around|space-evenly|stretch */
    align-content: flex-start;
}

.items{
    /* border: thin solid #999; */
    width: 100px;
    /* width: 20%;
    height: 20%; */
    background-color: #666;


    flex-grow: 1;
    /* Cuando la caja flexbox tenga espacio sobrante es la habilidad o  el factor de crecer, valor por defecto 0, NO se aceptan valores negativos */


    flex-shrink: 1;
    /* Cuando la caja flexbox NO tenga espacios sobrante, es la habilidad o el factor de encojerse, valor por defecto es 1, NO se aceptan valores negativos */

    flex-basis: auto;
}

.items:nth-child(2){
    flex-grow: 3;
}

.items:nth-child(3){
    flex-grow: 2;
}
/* Regla CSS consta de 2 partes 
1) el selector
2) Bloque de declaraciones:{
    atributo:valor,
    atributo-de-mas-de-dos-palabras;otro-valor;
} */

/* Las @import: Son mala practica porque son bloqueantes a la hora de que el nav lee esta instruccion*/
/* @import url("otra-hoja.css"); */

h1{
    color:orangered;
    background-color: black;
}

/*
Links de referencia y documentacion
  - https://es.wikipedia.org/wiki/Hoja_de...
  - https://www.w3.org/html/logo/
  - https://www.w3.org/standards/webdesig...
  - https://www.w3.org/TR/css-2020/
  - https://developer.mozilla.org/es/docs...
üîµ CSS Reference - https://cssreference.io/
üîµ Can I Use - https://caniuse.com/
üîµ Code Guide - https://codeguide.co/
üîµ Pseudoclases - https://developer.mozilla.org/es/docs...
üîµ Pseudoelementos - https://developer.mozilla.org/es/docs...
üîµ Propiedades hederables - https://web.dev/learn/css/inheritance...
üîµ Reset CSS - https://meyerweb.com/eric/tools/css/r...
üîµ Normalize CSS - https://necolas.github.io/normalize.css/
üîµ Autoprefixer CSS - https://autoprefixer.github.io/
üîµ Modelo de Caja - https://developer.mozilla.org/es/docs...
üîµ Tama√±o de Caja Paul Irish - https://www.paulirish.com/2012/box-si...
üîµ 960 Grid System - https://960.gs/

*/


/*Existen 3 selectores basicos
1)Etiquetas-son elementos HTML
2)Identificadores-atributo id-#
2)Clases -atributo class.
*/

p{
    color: midnightblue ;
}

/*Dar estilos con id se considera un antipatron*/
#parrafo-dos{
    background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro codigo CSS */

.bg-skyblue{
    background-color: skyblue;
}

.bg-steelblue{
    background-color: steelblue;
}

.text-20{
    font-size: 20px;
}

.text-32{
    font-size: 32px;
}

.text-white{
    color: white;
}

.hijos-directos>li{
    background-color: thistle;
}

.hijos-descendientes b{
    background-color: thistle;
}

/*Los selectores de Hermanos van a aplicar a los elementos que son Hnos y que esten por debajo del elemento de referencia*/
.hermanos-general ~li{
    background-color: thistle;
}

/*Los selectores de hermanos adyacentes van a aplicar al elemento que sea Hno y que este por debajo del elemento de referencia*/
.hermanos-adyacentes +li{
    background-color: thistle;
}

/*Selectores de atributos*/
.selectores-atributos a[href]{
    color: orangered;
}

.selectores-atributos a[target="_blank"]{
    font-weight: bold;
}

/*El comodin del asterisco aplica el estilo si contiene al texto en cuestion en cualquier parte*/
.selectores-atributos a[href*="jonmircha"]{
    font-size: 24px;
}

/*El comodin del ^ aplica el estilo si contiene el texto en cuestion al inicio*/
.selectores-atributos a[href^="http://"]{
    text-decoration: none;
}

/*El comodin del $ aplica el estilo si contiene el texto en cuestion al final*/
.selectores-atributos a[href$=".com"]{
    background-color: black;
}

/*El comodin del ~ aplica el estilo si contiene el texto en cuestion en una lista separada por espacios*/
.selectores-atributos a[class~="cursos"]{
    background-color: midnightblue;
}

/*El comodin del | aplica el estilo si contiene el texto en cuestion en una lista separada por espacios y que despues del texto venga un guion medio*/
.selectores-atributos a[class|="menu"]{
    font-style: italic;
}

/*Selector Universal*/
*{
    font-family: sans-serif;
}

.selector-universal *{
    font-size: 24px;
}

/*Pseudo-clases
Dan estilos dependiendo del contexto, posicion o estado del elemento
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
*/
.form-pseudoclases *:required{
    border-color: yellow;
}

.form-pseudoclases *:valid{
    border-color: green;
}

.form-pseudoclases *:invalid{
    border-color: red;
}

.form-pseudoclases *:focus{
    background-color: skyblue;
}

.form-pseudoclases *:disabled{
    background-color: pink;
}
/*
:active
:visited*/
.menu-pseudoclases a:visited{
    color:olive;
}

.menu-pseudoclases a:hover{
    color:orange;
}

.p-pseudoclases:hover{
    font-size: 20px;
}

#temario-css:target{
    background-color: lightgreen;
}

.lista-pseudoclases li:first-child{
    color:green;
}

.lista-pseudoclases :last-child{
    color:violet;
}

.lista-pseudoclases li:nth-child(3){
    color: navy;
}

.lista-pseudoclases li:nth-child(4n){
    font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n+1){
    font-weight: bold;
}

.lista-pseudoclases li:nth-child(even){
    background-color:yellow;
}

.lista-pseudoclases li:nth-child(odd){
    background-color: orange;
}

.articulo-pseudoclases p:first-of-type{
    background-color: pink;
}

.articulo-pseudoclases p:last-of-type{
    background-color: violet;
}

.articulo-pseudoclases p:nth-of-type(3){
    background-color: fuchsia;
}

.articulo-pseudoclases *:not(p){
    background-color: beige;
}

/*Pseudoelementos -Dan estilos a partes especificas de un elemento, se usa el:: para diferenciarlos de las pseudoclases
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-elements*/

.saga-geminis::before{
    content: 'üèá';
}

.saga-geminis::after{
    content: '‚ôä';
}

.saga-precio::before{
    content: '$';
    font-weight: bold;
}

.saga-precio::after{
    content: 'USD';
    font-weight: bold;
}

.p-pseudoelementos::first-letter{
    font-weight: bold;
    font-size: 32px;
}

.p-pseudoelementos::first-line{
    color: coral;
}

.p-pseudoelementos::selection{
    color: greenyellow;
    background-color: black;
}

.input-pseudoelementos::placeholder{
    color: green;
}

/*Agrupar Selectores*/
.form-agrupar-selectores input[type='text'],
.form-agrupar-selectores input[type='email'],
.form-agrupar-selectores textarea{
    border-color: yellow;
    border-width: 2px;
    border-style: dashed;
    background-color: black;
    font-size: 20px;
    display: block;
    width: 300px;
}

/*El Algoritmo de CSS es la forma en la que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en algunas ocasiones se sobreescriben las reglas CSS 
1)La Cascada
2)La Especificidad
3)La Herencia*/

/* La cascada es el mecanismo en que el navegador aplica los estilos y toma en cuenta siguiente en este orden:
1)  El origen del codigo
    El User Agent(los estilos por defecto del nav)
    Personalizaciones del Usuario
    Los estilos del autor
2)  La especificidad del Selector
3)  Orden de Aparicion */


/* La especificidad es el peso que tiene un selector cuando hay un conflicto de estilos. Se calcula de la siguiente forma::after
Etiquetas y pseudoelementos.................0,0,0,1
Clases,atributos y pseudoclases.............0,0,1,0
Identificadores.............................0,1,0,0
Estilos en linea............................1,0,0,0
!important.....................Rompe la especificidad */

/* La Herencia es la capacidad de un selector de obtener (heredar) los valores de sus ancestros mas cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuestion con el valor initial 

https://web.dev/learn/css/inheritance/#which-properties-are-inheritable*/

blockquote#cita-marco.cita-marco{
    background-color: lightsteelblue;
}

blockquote{
    background-color: burlywood;
}

#cita-marco{
    background-color: lightgreen;
}

blockquote.cita-marco{
    background-color: tomato;
}

.cita-marco{
    background-color: cornflowerblue;
}

.cita-marco{
    background-color: mediumaquamarine !important;
}

blockquote#cita-marco{
    background-color: lightsalmon;
}

.cita-marco{
    background-color:moccasin !important;
    background-color: orange !important;
    font-size: 32px;
    border-style: dotted;
    border-color: red;
}

.cita-marco cite{
    background-color:pink;
    background-color: inherit;
    font-size: 24px;
    font-size: initial;
    border-style: inherit;
    border-color: inherit;
}


/* Prefijos de los navegadores
-webkit-user-select-none;
-moz-user-select-none;
-ms-user-select-none;
user-select-none; */








/*.paralelogramo{
    position: top left;
    width: 250px;
    height: 300px;
    border-radius:40% 10% 49% 17% / 62% 8% 69% 20%;
    /* border-radius:50px; */
    /*background-color: aquamarine;
    transform: skew(-45deg);
    
}/*


